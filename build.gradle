plugins {
  id 'java-gradle-plugin'
  id 'groovy'
  id 'idea'
  id 'com.gradle.plugin-publish' version '0.13.0'
  id 'com.palantir.git-version' version '0.12.3'
  id 'com.palantir.idea-test-fix' version '0.1.0'
  id 'nebula.maven-publish' version '9.5.3'
}

repositories {
  mavenCentral()
}

sourceCompatibility = '1.7'

dependencies {
  compile 'org.codehaus.groovy:groovy-backports-compat23:2.3.5'
  testCompile gradleTestKit()
  testCompile 'com.netflix.nebula:nebula-test:7.0.0'
  // So we can run tests directly from IntelliJ
  testRuntime files(tasks.pluginUnderTestMetadata)
}

tasks.idea.dependsOn 'pluginUnderTestMetadata'

gradlePlugin {
  automatedPublishing = false

  plugins {
    processors {
      id = 'org.inferred.processors'
      implementationClass = 'org.inferred.gradle.ProcessorsPlugin'
    }
  }
}

//// Tests ////////////////////////////////////////////////////////////////////////////

test {
  testLogging {
    exceptionFormat = 'full'
  }
}

//// Publication //////////////////////////////////////////////////////////////////////

group = 'org.inferred'
version = (System.env.CIRCLE_TAG ?: gitVersion()).replaceAll('^v','')

pluginBundle {
  website = 'https://github.com/palantir/gradle-processors'
  vcsUrl = 'https://github.com/palantir/gradle-processors'

  plugins {
    processors {
      id = 'org.inferred.processors'
      displayName = 'Processors plugin'
      description = 'Clean integration of Java 6+ annotation processors with the Eclipse and IDEA plugins'
      tags = ['java', 'annotation', 'processor']
    }
  }
}

// Configure the publishPlugins task
tasks.publish.dependsOn tasks.publishPlugins
tasks.publishPlugins.onlyIf { versionDetails().isCleanTag }
project.ext.'gradle.publish.key' = System.env["GRADLE_KEY"]
project.ext.'gradle.publish.secret' = System.env["GRADLE_SECRET"]
